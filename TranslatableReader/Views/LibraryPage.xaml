<Page x:Class="TranslatableReader.Views.LibraryPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	  xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:behaviors="using:Template10.Behaviors"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:TranslatableReader.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:TranslatableReader.ViewModels" mc:Ignorable="d"
	  x:Name="ThisPage">

	<Page.DataContext>
		<vm:LibraryPageViewModel />
	</Page.DataContext>

	<Page.Resources>

		<Style x:Key="RichTextBlockStyle1" TargetType="RichTextBlock">

		</Style>

	</Page.Resources>

	<Grid  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

		<!--  #region default visual states  -->

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup>
				<VisualState x:Name="VisualStateNarrow">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<!--  TODO  -->
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateNormal">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<!--  TODO  -->
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateWide">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<!--  TODO  -->
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
			<VisualStateGroup x:Name="CommonStates">
				<VisualState x:Name="hideNormalModeBtns">
					<Storyboard>
						<DoubleAnimation To="0" Duration="{ThemeResource ADuration}" Storyboard.TargetName="AddBookBtn" Storyboard.TargetProperty="(UIElement.Opacity)" Completed="hideNormalModeBtns_OnCompleted" />
						<DoubleAnimation To="0" Duration="{ThemeResource ADuration}" Storyboard.TargetName="TurnOnMultiSelectModeBtn" Storyboard.TargetProperty="(UIElement.Opacity)" />
					</Storyboard>
				</VisualState>
				<VisualState x:Name="showNormalModeBtns">
					<Storyboard>
						<DoubleAnimation To="1" Duration="{ThemeResource ADuration}" Storyboard.TargetName="AddBookBtn" Storyboard.TargetProperty="(UIElement.Opacity)" />
						<DoubleAnimation To="1" Duration="{ThemeResource ADuration}" Storyboard.TargetName="TurnOnMultiSelectModeBtn" Storyboard.TargetProperty="(UIElement.Opacity)" />
					</Storyboard>
				</VisualState>
				<VisualState x:Name="hideMultiSelectModeBtns">
					<Storyboard>
						<DoubleAnimation From="1" To="0" Duration="{ThemeResource ADuration}" Storyboard.TargetName="RemoveBooksBtn" Storyboard.TargetProperty="(UIElement.Opacity)"
										 Completed="hideMultiSelectModeBtns_OnCompleted" />
						<DoubleAnimation From="1" To="0" Duration="{ThemeResource ADuration}" Storyboard.TargetName="TurnOffMultiSelectModeBtn" Storyboard.TargetProperty="(UIElement.Opacity)" />
					</Storyboard>
				</VisualState>
				<VisualState x:Name="showMultiSelectModeBtns">
					<Storyboard>
						<DoubleAnimation From="0" To="1" Duration="{ThemeResource ADuration}" Storyboard.TargetName="RemoveBooksBtn" Storyboard.TargetProperty="(UIElement.Opacity)" />
						<DoubleAnimation From="0" To="1" Duration="{ThemeResource ADuration}" Storyboard.TargetName="TurnOffMultiSelectModeBtn" Storyboard.TargetProperty="(UIElement.Opacity)" />
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>

		<!--  #endregion  -->

		<Grid.RowDefinitions>
			<!--  Header Row  -->
			<RowDefinition Height="Auto" />
			<!--  Content Row  -->
			<RowDefinition Height="*" />
			<!--  CommandBar Row  -->
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!--  page header  -->

		<controls:PageHeader Frame="{x:Bind Frame}" Text="Библиотека">
			<interactivity:Interaction.Behaviors>
				<behaviors:EllipsisBehavior Visibility="Collapsed" />
			</interactivity:Interaction.Behaviors>
		</controls:PageHeader>

		<!--  page content  -->

		<StackPanel Grid.Row="1"  Orientation="Vertical"  VerticalAlignment="Top">
			<ListView  x:Name="BooksListView"
				       ItemsSource="{x:Bind ViewModel.Books}"
					   IsItemClickEnabled="True"
					   HorizontalContentAlignment="Stretch"
					   SelectionMode="None"
					   IsMultiSelectCheckBoxEnabled="True"
					   ItemClick="BooksListView_OnItemClick"
					   SelectionChanged="BooksListView_OnSelectionChanged" IsSynchronizedWithCurrentItem="False">
				<!--<ListView.Header>
					<Grid Margin="0,0,0,16" HorizontalAlignment="Stretch">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<TextBox Padding="14,3,6,5" Grid.Column="0">
							-->
				<!--<interactivity:Interaction.Behaviors>
								<behaviors:TextBoxEnterKeyBehavior>
									<core:CallMethodAction TargetObject="{x:Bind ViewModel}" MethodName="Search" />
								</behaviors:TextBoxEnterKeyBehavior>
							</interactivity:Interaction.Behaviors>-->
				<!--
						</TextBox>
						<Button Click="{x:Bind ViewModel.BooksService.Search}" Margin="4,0,0,0" VerticalAlignment="Bottom" Grid.Column="1">
							<SymbolIcon Symbol="Find" />
						</Button>
					</Grid>
				</ListView.Header>-->

				<ListView.ItemContainerStyle>
					<Style TargetType="ListViewItem">
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					</Style>
				</ListView.ItemContainerStyle>

				<ListView.ItemTemplate>
					<DataTemplate>
						<Grid Padding="0,5" Margin="0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Rectangle Width="30" Fill="Silver" Grid.Column="0" Height="30" />
							<TextBlock Grid.Column="1" Margin="5,0,0,0" TextWrapping="Wrap" MaxLines="4" TextTrimming="WordEllipsis" VerticalAlignment="Center">
								<Run Text="{Binding Name, FallbackValue=DisplayName}" />
							</TextBlock>
						</Grid>
					</DataTemplate>
				</ListView.ItemTemplate>
			</ListView>
			<RichTextBlock  TextIndent="15" Padding="20" LineHeight="17" LineStackingStrategy="BaselineToBaseline">

				<RichTextBlock.Blocks>

					<Paragraph>
						<Run Text="Spacing between paragraphs is caused by margins set on the paragraphs. Two adjacent margins will to the larger of the two margin widths, rather than doubling up."></Run>
					</Paragraph>
					<Paragraph>
						<Run Text="Spacing between paragraphs is caused by margins set on the paragraphs. Two adjacent margins will to the larger of the two margin widths, rather than doubling up."></Run>
					</Paragraph>
					<Paragraph>
						<Run Text="Spacing between paragraphs is caused by margins set on the paragraphs. Two adjacent margins will to the larger of the two margin widths, rather than doubling up."></Run>
					</Paragraph>
				</RichTextBlock.Blocks>
			</RichTextBlock>
		</StackPanel>

		<!-- command bar -->

		<Grid x:Name="BottomBar" Grid.Row="2">
			<CommandBar ClosedDisplayMode="Compact">
				<!--<AppBarButton Icon="List" Label="Mode">
					<AppBarButton.Flyout>
						<MenuFlyout Placement="Top">
							<MenuFlyoutItem Command="{x:Bind SetPaneCommand}" CommandParameter="0" Text="Overlay" />
							<MenuFlyoutItem Command="{x:Bind SetPaneCommand}" CommandParameter="1" Text="Inline" />
							<MenuFlyoutItem Command="{x:Bind SetPaneCommand}" CommandParameter="2" Text="CompactOverlay" />
							<MenuFlyoutItem Command="{x:Bind SetPaneCommand}" CommandParameter="3" Text="CompactInline" />
						</MenuFlyout>
					</AppBarButton.Flyout>
				</AppBarButton>-->

				<AppBarButton x:Name="AddBookBtn" Icon="Add"  Click="{x:Bind ViewModel.BooksService.AddBookAsync}" Label="Добавить" />
				<AppBarButton x:Name="TurnOnMultiSelectModeBtn" Icon="Bullets"  Click="{x:Bind ToggleMultiSelectMode}" Label="Выбрать" />
				<AppBarButton x:Name="RemoveBooksBtn" Icon="Remove"  Command="{x:Bind RemoveBooksCommand}" Label="Удалить" Visibility="Collapsed" />
				<AppBarButton x:Name="TurnOffMultiSelectModeBtn" Icon="Cancel"  Click="{x:Bind ToggleMultiSelectMode}" Label="Отмена" Visibility="Collapsed" />
			</CommandBar>
		</Grid>
	</Grid>
</Page>